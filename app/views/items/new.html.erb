<%
# WontoMedia - a wontology web application
# Copyright (C) 2010 - Glen E. Ivey
#    www.wontology.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License version
# 3 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program in the file COPYING and/or LICENSE.  If not,
# see "http://www.gnu.org/licenses/".
%>


<% content_for :head do %>
  <meta name="robots" content="noindex" />
  <meta name="googlebot" content="noindex" />
<% end %>

<%
  require Rails.root.join( 'lib', 'helpers', 'item_helper')
  show_class_control = @item.class_item_id.nil?
  if show_class_control
    @title_text = 'Make a new item'
  else
    @title_text = 'Enter a new ' + @item.class_item.name
  end

  # initialize array to define "Glossary Help" box of links:
  @glossary_help_entries = [
    [ 'Category', 'Help:GlossaryAtoO#anchor_Category' ],
    [ 'Individual', 'Help:GlossaryAtoO#anchor_Individual' ],
    [ 'Property', 'Help:GlossaryAtoO#anchor_Property' ],
    [ 'Item', 'Help:GlossaryAtoO#anchor_Item' ]
  ]
 %>


<% options = @item.sti_type.nil? ? {} : { :url => items_path() }
   form_for(@item, options) do |f|
 %>
  <%= f.error_messages %>
  <% if @item.sti_type.nil? %><div style="width: 36%; float: left;"><% end %>
    <%= render :partial => "class_select",
          :locals => { :f => f, :show_class_control => show_class_control } %>
    <%= render :partial => "type_select", :locals => { :f => f } %>
    <%= render :partial => "form_fields", :locals => { :f => f } %>
    <script type="text/javascript">
      <% if @item.sti_type.nil? %>
        $('item_sti_type').focus();
      <% else %>
        $('item_title').focus();
      <% end %>
      genNameFromTitleOk = true;
    </script>

    <p id="create_button_container" style="text-align: center">
      <%= f.submit "Create", :tabindex => "150" %>
    </p>

    <div class="horizontal-link-list"><ul>
      <li><%= link_to 'Cancel,&nbsp;show&nbsp;item&nbsp;list', items_path,
               :rel => 'nofollow' -%></li>
      <li><%= link_to 'Cancel,&nbsp;show&nbsp;connection&nbsp;list',
                connections_path, :rel => 'nofollow' -%></li>
    </ul></div>
  <% if @item.sti_type.nil? %>
    </div>

    <div class="noncontent" style="width: 60%; float: right; margin-left: 0;">
      <dl><dt id="category_title">Category</dt><dd id="category_desc">

        "Category" is for groups of things, for concepts, and for the
        upper levels of <%=
          popup_help_icon 'Definition of hierarchies in a wontology',
            'Help:GlossaryAtoO#anchor_Hierarchy', 'hierarchies' -%>.
        (Though a hierarchy made up entirely of concepts could be all
        Categories.)  Categories can "contain" other categories and/or
        individuals.

      </dd><dt id="individual_title">Individual</dt><dd id="individual_desc">

        "Individual" is for specific, concrete things.  Individuals can
        "contain" other individuals, but cannot contain categories.
        ("Ford Model-T" might be an individual, but could still contain
        parts that are also individuals, like "Windshield" and "Tire".)

      </dd><dt id="property_title">Property</dt><dd id="property_desc">

        "Property" is used to define <%=
          popup_help_icon 'Definition of relationships in a wontology',
            'Help:GlossaryPtoZ#anchor_Relationship', 'relationships' -%>
        between other items.  Once you create a new Property <%=
          popup_help_icon 'Definition of Item',
            'Help:GlossaryAtoO#anchor_Item', 'item' -%>,
        you should create one or more <%=
          popup_help_icon 'Definition of Connection',
            'Help:GlossaryAtoO#anchor_Connection', 'connections' -%>
        that relate that property to other existing properties.  In
        general, you will use the "sub_property_of" property in order to
        create these connections.  For example, if you were creating a
        description of famillial relations between people, you might
        create a new property named "spouseOf".  To define what the
        creation of connections using this new property <em>means</em>, you
        can create the connection "<code>spouseOf sub_property_of
        symmetric_relationship</code>".  This example will cause
        "spouseOf" to be treated as a "peer" <%=
          popup_help_icon 'Peer relationships in a wontology',
            'Help:GlossaryPtoZ#anchor_Peer', 'relationship' -%>
        (rather than a hierarchical one), and as a symmetric <%=
          popup_help_icon 'Symmetric relationships in a wontology',
            'Help:GlossaryPtoZ#anchor_Symmetric', 'relationship' -%>,
        so that creating a "spouseOf" connection from one item to another
        implies an connection going the other direction even if it is not
        defined explicitly.

      </dd></dl>
    </div>
  <% end %>  <!-- instructions only if no .sti_type yet -->
<% end %>  <!-- of form_for -->
<%= ruby_hash_to_javascript 'class_to_type', @class_to_item_map %>

<% content_for :first_bottom_page_js do %>
  <script type="text/javascript">
    inAnItemsForm = true;
    creatingNewItem = true;
  </script>
<% end %>
<% content_for :last_bottom_page_js do %>
  <script type="text/javascript">
    plumbEventHandlersToItemCreationElements();
  </script>
<% end %>
