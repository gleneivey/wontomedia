<!-- Copyright (c)  2010  Glen E. Ivey
     Permission is granted to copy, distribute and/or modify this document
     under the terms of the GNU Free Documentation License, Version 1.3;
     with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
     A copy of the license is in the file COPYING.DOCUMENTATION
  -->


All [[WmHelp:GlossaryAtoO#anchor_Node|nodes]] have a text [[WmHelp:GlossaryAtoO#anchor_Name|Name]] field.  Because the Name is used in web addresses (URLs) and as symbols in files exchanged with other systems, it is limited in length and in the set of characters it can use.  Beyond that, the [[WmHelp:GlossaryPtoZ#anchor_WontoMedia|WontoMedia]] web application places no limits on how a Name is created.

However, there are standards for [[WmHelp:GlossaryAtoO#anchor_Ontology|ontologies]] that have conventions for the creation of symbolic identifiers that you may wish to adopt when creating the Names for nodes in a wontology.  First, because Names are not allowed to contain spaces but will often be composed from multiple words, a solution is needed for making word boundaries within Names more readable.  In programming languages, which have the same problem with the creation of symbolic variable names, there are two common solutions.  First, the spaces can simply be replaced with underscores, which would produce Names that look like "this_is_a_node".  The second common convention is to capitalize the first letter of each word within the Name, like "ThisIsAnotherNode".  In this convention, often called "[http://en.wikipedia.org/wiki/Camel_case camel case]," there can be arguments over details like what is to be done for single-letter words or acronyms (is the camel case of "I like NASA" really "ILikeNasa"?), and a choice has to be made about the capitalization of the very first letter.

In the [[WmHelp:GlossaryPtoZ#anchor_RDF|RDF]] and [[WmHelp:GlossaryAtoO#anchor_OWL|OWL]] standards, the preferred way to create symbolic names for nodes is to use camel case.  And further, the standards' authors capitalize names for nodes that represent things ([[WmHelp:GlossaryAtoO#anchor_Category|Category]]- and [[WmHelp:GlossaryAtoO#anchor_Individual|Individual]]-type nodes in WontoMedia), use an initial lower-case letter for the names of nodes used as predicates ([[WmHelp:GlossaryPtoZ#anchor_Property|Property]]-type nodes).  It is recommended that, in the absence of a compelling reason, you create node Name strings that conform to this convention.  To make this easy, when creating a new node, WontoMedia automatically creates a suggested Name value (according to this convention) as you type the node's Title.

WontoMedia also contains several [[WmHelp:BuiltInRelationshipTypes|built-in Property-type nodes]], which can be used either directly as the predicates in the edges you create (if appropriate), or as [[WmHelp:GlossaryPtoZ#anchor_Parent|parents]] of your own Property nodes.  To distinguish these nodes from others created in the system, they are named using a convention of underscores in place of spaces, like "sub_property_of".

Finally, note that WontoMedia allows (because URL standards and [[WmHelp:GlossaryPtoZ#anchor_XML|XML]] both allow) the dash character ("-") to be used in node Name strings.  This would allow the use of a dashes in place of spaces convention, like "this-is-a-node", if desired.  There is no precedent for this in computer programming languages, because there "dash" is typically used to indicate subtraction, and so allowing it in symbol names would be ambiguous.
