<!-- Copyright (c)  2010  Glen E. Ivey
     Permission is granted to copy, distribute and/or modify this document
     under the terms of the GNU Free Documentation License, Version 1.3;
     with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
     A copy of the license is in the file COPYING.DOCUMENTATION
  -->
This [[WmHelp:GlossaryPtoZ#anchor_Wontology|wontology]] web site runs on the [[WmHelp:GlossaryPtoZ#anchor_WontoMedia|WontoMedia]] web application software.  This page provides a brief description of how it is constructed and the general-purposed components and technologies it uses.

As a web application, WontoMedia has components that run on the web server, and other components that download with the web pages and are run by your browser.  The browser sends commands and requests for information to the server, which updates the stored information so that other people can see it.

== Server Side ==

<!-- ads: "How I built my web application -- server side" -->
<amazonwidget adcode="1e365777-413a-40d0-8c06-c49684553c3d" />
The server components of WontoMedia are written in the [http://ruby-lang.org/ Ruby] programming language.  Ruby is an interpreted programming language, used for both scripts and large programs, with one of its primary application areas being web application development.  Most people feel that it is a very pleasant language to work in, with a natural syntax and dynamic typing.  Ruby is also associated with the [http://www.rubygems.org/ Gems] software packaging and distribution system, which is included in most Ruby installations and assumed by most all Ruby software.

In addition to the software that is unique to WontoMedia, a number of third-party Ruby software components and libraries are used.  Primary among these is the [http://rubyonrails.org/ Ruby-on-Rails] web application framework.  WontoMedia was written specifically for Rails, and depends on the Rails libraries for managing communication with the user and their browser, for storing information on the server, and for the structure into which the WontoMedia-specific software components fit.  In particular, Rails handles communication with the web server software, a local database server, etc.

WontoMedia configures Rails to work with the [http://www.mysql.com/ MySQL] database server.  This is arguably the most popular and widely-used open-source database system available.

We use a number of open-source tools for automated testing of our Ruby and JavaScript (see below) source code.  In particular, we use [http://wiki.github.com/aslakhellesoy/cucumber/ Cucumber] (a close relative of the Ruby tool RSpec) for executing acceptance tests.  These tests validate each user features we've included in WontoMedia, and we add to them as we add to WontoMedia.

In order to provide more interactivity and improved responsiveness to the user, WontoMedia is designed using an architectural pattern known as [http://en.wikipedia.org/wiki/Ajax_(programming) Ajax].  In older web applications, the only way to change the content of the page the user sees was for the user to click a link or a button that would load an entirely new replacement page from the server.  Then browsers began to support the inclusion of software components within web pages, that could make updates to a page while it was still being displayed by the browser.  In an Ajax web application, the software components in the web page make their own requests to the server (separate from the browser's requests for new pages) and can use the responses from the server to quickly and efficiently update only part of a displayed page.

== Browser Side ==

<!--  ads: "How I built my web application -- browser side" -->
<amazonwidget adcode="a0ffd3af-a0a9-4a20-97ef-ca8f2977f64a" />
WontoMedia relies heavily on software components downloaded with web pages and executed in the user's browser.  These components are written in the [http://en.wikipedia.org/wiki/JavaScript JavaScript] programming language.  Like Ruby, JavaScript is a dynamic, interpreted language.  Though capable of being used for most applications, JavaScript was originally designed for running software embedded in web pages, and is still the most broadly used language for this purpose.

Web pages themselves are written in a separate "markup language" called [http://en.wikipedia.org/wiki/HTML HTML].  In addition to HTML and JavaScript, web pages generated by WontoMedia use a third primary language: CSS, the [http://en.wikipedia.org/wiki/Cascading_Style_Sheets Cascading Style Sheet] language.  The HTML portion of a web page includes the actual content and describes how the pieces of content relate to each other.  The CSS statements that are included in or referenced by a web page determines how the content will look when displayed to the user.

Web pages which consist primarily of HTML (with or without CSS) can have a wide range of appearances and content, but in general will not change in appearance/display once loaded by a web browser.  The execution of JavaScript program code within a web page is how pages are made "dynamic," so that they respond to use actions without have to communicate with the server or (through Ajax) can update parts of a page with information from the server without having to get a new copy of the whole page.

== Free Software ==

<!--  ads: "Best Free-Software Books" -->
<amazonwidget adcode="3976cb83-96c9-4c64-9d34-f8c994d25495" />
Development and deployment of WontoMedia has been done using [http://en.wikipedia.org/wiki/Free_software Free] and [http://en.wikipedia.org/wiki/Open_source Open Source] software.  In particular, besides the languages and tools listed on the [[Main_Page|WontoMedia development wiki's main page]], we use the following:

* The primary development systems for WontoMedia run
** the [http://www.ubuntu.com/ Ubuntu] derivative of
** the [http://www.debian.org/ Debian] distribution of
** the [http://www.gnu.org/ GNU] operating system on
** the [http://en.wikipedia.org/wiki/Linux Linux] kernel.
* Common web software we use includes
** the [http://httpd.apache.org/ Apache] web server,
** the [http://www.mediawiki.org/ MediaWiki] wiki web application,
** the [http://www.mozilla.com/ FireFox] web browser,
** the [http://getfirebug.com/ FireBug] debugging/development FireFox extension,
* For incidentals and administration, we also use
** the [http://www.perl.org/ Perl] programming language
* Finally, the WontoMedia development project is supported by a number of other open-source web sites and services:
** http://rubyforge.org/
** http://github.com/
** http://www.pivotaltracker.com/
** http://lighthouseapp.com/
** http://runcoderun.com/
